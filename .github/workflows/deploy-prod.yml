# Copyright The Linux Foundation and each contributor to LFX.
# SPDX-License-Identifier: MIT

name: Prod Deployment Workflow

on:
  push:
    tags:
      - v0.*
      - v1.*
      - v2.*
      - v3.*

permissions:
  contents: read
  id-token: write

jobs:
  build_prod:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: yarn
          cache-dependency-path: "yarn.lock"
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          role-to-assume: arn:aws:iam::716487311010:role/github-actions-deploy
          aws-region: us-east-1
      
      - name: Install Top Level Dependencies
        run: yarn install

      - name: Install Edge Dependencies
        run: yarn install

      - name: Build prod
        run: yarn build:prod
      
      - name: Build Edge
        run: |
          pushd edge
          yarn build
          popd

  deploy_prod:
    runs-on: ubuntu-latest
    needs: build_prod
    environment: prod
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: yarn
          cache-dependency-path: "yarn.lock"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          role-to-assume: arn:aws:iam::716487311010:role/github-actions-deploy
          aws-region: us-east-1

      - name: Install Top Level Dependencies
        run: yarn install

      - name: Install Edge Dependencies
        run: yarn install

      - name: Build prod
        run: yarn build:prod
      
      - name: Build Edge
        run: |
          pushd edge
          yarn build
          popd
      
      - name: Deploy Cloudfront and LambdaEdge
        run: |
          SLS_DEBUG=* yarn sls deploy --stage="${STAGE}" --verbose
        env:
          STAGE: prod
      
      - name: Deploy Frontend Bucket
        run: |
          SLS_DEBUG=* yarn sls client deploy --stage="${STAGE}" --verbose --no-confirm
        env:
          STAGE: prod
      
      - name: Invalidate Cloudfront Cache
        run: |
          aws --region us-east-1 cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths "/*"
        env:
          STAGE: prod
          ROOT_DOMAIN: communitybridge.org
          PRODUCT_DOMAIN: easycla.communitybridge.org
